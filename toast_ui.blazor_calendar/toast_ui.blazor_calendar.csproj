<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <RootNamespace>toast_ui.blazor_calendar</RootNamespace>
    <AssemblyName>toast_ui_blazor_calendar</AssemblyName>
  </PropertyGroup>

  <PropertyGroup Label="Versioning properties">
    <MinVerMinimumMajorMinor>1.0</MinVerMinimumMajorMinor>
    <MinVerDefaultPreReleasePhase>beta</MinVerDefaultPreReleasePhase>
    <MinVerVerbosity>detailed</MinVerVerbosity>
  </PropertyGroup>
  
  <PropertyGroup Label="Packaging properties">
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Copyright>MIT</Copyright>
    <Description>Toast UI Calandar Wrapper For Blazor in Net6. A fully featured calendar component for blazor projects. Comes bundled with ToastUI Calendar JS and CSS files. visit github repo for examples on how to implement.</Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>toast_ui.blazor_calendar</PackageId>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageProjectUrl>https://github.com/gismofx/toast_ui.blazor_calendar</PackageProjectUrl>
    <RepositoryUrl>https://github.com/gismofx/toast_ui.blazor_calendar</RepositoryUrl>
    <PackageTags>blazor calendar jsinterop toastui c#</PackageTags>
    <PackageReleaseNotes>Initial beta release. Visit the GitHub repo for examples and sample project. Post any issues. All dates are stored in UTC time, but rendered in your local time based on browser.</PackageReleaseNotes>
    <Product>toast_ui.blazor_calendar</Product>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Authors>gismofx</Authors>
    <RepositoryType>GitHub</RepositoryType>
    <PackageOutputPath>$(SolutionDir)\NuGet-package</PackageOutputPath>
  </PropertyGroup>

  <ItemGroup>
    <SupportedPlatform Include="browser" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Macross.Json.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Components.Web" Version="5.0.*" />
    <PackageReference Include="MinVer" Version="4.0.0" PrivateAssets="All" />
    <PackageReference Include="System.Text.Json" Version="8.0.2" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(SolutionDir)\icon.png" Pack="True" PackagePath="\" />
    <None Include="$(SolutionDir)\README.md" Pack="True" PackagePath="\" />
    <Folder Include="Models\Template\" />
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Lang\Language.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Language.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <Content Update="NpmJS\package-lock.json" CopyToOutputDirectory="Never" />
    <Content Update="NpmJS\package.json" CopyToOutputDirectory="Never" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Lang\Language.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Language.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <PropertyGroup Condition="'$(Confiuration)' == 'Debug|AnyCPU'">
    <NpmConfiguration>dev</NpmConfiguration>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)' == 'Release|AnyCPU'">
    <NpmConfiguration>prod</NpmConfiguration>
  </PropertyGroup>
  <!--$(NpmConfiguration)-->

  <Target Name="InstallAndRunNpm" BeforeTargets="PreBuildEvent">
    <Exec Command="npm install" WorkingDirectory="NpmJS" />
    <Exec Command="npm run-script prod" WorkingDirectory="NpmJS" />
  </Target>
  
</Project>